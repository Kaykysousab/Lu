<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Quiz do Amor ‚ù§Ô∏è - Para Ludmylla</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');
    
    body {
      font-family: 'Inter', sans-serif;
      background: linear-gradient(to bottom right, #6b46c1, #4c51bf);
      min-height: 100vh;
      margin: 0;
      padding: 20px;
      color: white;
    }
    
    .quiz-container {
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.2);
      border-radius: 12px;
    }
  </style>
</head>
<body class="flex items-center justify-center min-h-screen">
  <div class="w-full max-w-2xl mx-4">
    <div class="text-center mb-8">
      <h1 class="text-3xl md:text-4xl font-bold mb-4">
        Quiz do Nosso Amor ‚ù§Ô∏è
      </h1>
      <p class="text-lg opacity-90">
        Teste o quanto voc√™ conhece sobre a nossa hist√≥ria!
      </p>
    </div>
    
    <!-- Quiz Container -->
    <div class="quiz-container p-6 md:p-8 shadow-lg" id="quiz-container">
      <div id="quiz-content">
        <!-- Conte√∫do do quiz ser√° carregado aqui -->
      </div>
    </div>
  </div>
  
  <script>
    // Dados do quiz
    const quizData = [
      {
        question: "Qual foi a data do nossa primeira conversa?",
        options: ["14 de Mar√ßo de 2024", "9 de outubro de 2024", "16 de Mar√ßo de 2025", "17 de abril de 2025"],
        correct: 1,
        explanation: "Foi no dia 9 de outubro de 2024! üíï"
      },
      {
        question: "Onde foi a primeira vez que nos vimos?",
        options: ["No parque", "No meu trabalho", "No cinema", "Em casa"],
        correct: 1,
        explanation: "Um momento m√°gico! üåü"
      },
      {
        question: "qual √© o dia do meu niver?",
        options: ["25 de Mar√ßo", "20 de Outubro", "2 de Abril", "7 de Setembro"],
        correct: 3,
        explanation: "sim 7 de Setembro! ‚ù§Ô∏è"
      },
    ];
    
    // Vari√°veis de estado do quiz
    let currentQuestion = 0;
    let score = 0;
    let answered = false;
    
    // Fun√ß√£o para carregar a pergunta atual
    function loadQuestion() {
      const quizContent = document.getElementById('quiz-content');
      if (!quizContent) return;
      
      const question = quizData[currentQuestion];
      
      quizContent.innerHTML = `
        <div class="mb-6">
          <div class="text-yellow-300 text-sm font-semibold mb-2">
            Pergunta ${currentQuestion + 1} de ${quizData.length}
          </div>
          <div class="w-full bg-gray-700 rounded-full h-2 mb-4">
            <div class="bg-purple-500 h-2 rounded-full" 
                 style="width: ${((currentQuestion + 1) / quizData.length) * 100}%"></div>
          </div>
        </div>
        
        <h2 class="text-xl font-bold text-white mb-6 text-center">
          ${question.question}
        </h2>
        
        <div class="space-y-3 mb-6" id="options-container">
          ${question.options.map((option, index) => `
            <button 
              class="w-full bg-white bg-opacity-10 p-3 rounded-lg text-white text-left hover:bg-opacity-20 transition-colors"
              data-index="${index}"
            >
              <span class="font-semibold mr-2">${String.fromCharCode(65 + index)})</span>
              ${option}
            </button>
          `).join('')}
        </div>
        
        <div id="explanation" class="hidden bg-purple-500 p-4 rounded-lg text-white text-center mb-4">
        </div>
        
        <div class="text-center">
          <button 
            id="next-btn" 
            class="hidden bg-yellow-500 px-5 py-2 rounded-lg text-white font-semibold"
          >
            ${currentQuestion === quizData.length - 1 ? 'Ver Resultado' : 'Pr√≥xima Pergunta'}
          </button>
        </div>
      `;
      
      // Adicionar event listeners √†s op√ß√µes
      const options = document.querySelectorAll('[data-index]');
      options.forEach(option => {
        option.addEventListener('click', function() {
          if (answered) return;
          const selectedIndex = parseInt(this.getAttribute('data-index'));
          selectAnswer(selectedIndex);
        });
      });
      
      // Adicionar event listener ao bot√£o pr√≥ximo
      const nextBtn = document.getElementById('next-btn');
      if (nextBtn) {
        nextBtn.addEventListener('click', nextQuestion);
      }
      
      answered = false;
    }
    
    // Fun√ß√£o para selecionar uma resposta
    function selectAnswer(selectedIndex) {
      if (answered) return;
      
      answered = true;
      const question = quizData[currentQuestion];
      const isCorrect = selectedIndex === question.correct;
      
      if (isCorrect) {
        score++;
      }
      
      // Destacar resposta correta e incorreta
      const options = document.querySelectorAll('[data-index]');
      options.forEach((option, index) => {
        if (index === question.correct) {
          option.classList.add('bg-green-500', 'bg-opacity-50');
          option.innerHTML += ' ‚úÖ';
        } else if (index === selectedIndex && !isCorrect) {
          option.classList.add('bg-red-500', 'bg-opacity-50');
          option.innerHTML += ' ‚ùå';
        }
        option.disabled = true;
      });
      
      // Mostrar explica√ß√£o
      const explanation = document.getElementById('explanation');
      if (explanation) {
        explanation.innerHTML = question.explanation;
        explanation.classList.remove('hidden');
      }
      
      // Mostrar bot√£o pr√≥ximo
      const nextBtn = document.getElementById('next-btn');
      if (nextBtn) {
        nextBtn.classList.remove('hidden');
      }
    }
    
    // Fun√ß√£o para avan√ßar para a pr√≥xima pergunta
    function nextQuestion() {
      currentQuestion++;
      
      if (currentQuestion < quizData.length) {
        loadQuestion();
      } else {
        showResult();
      }
    }
    
    // Fun√ß√£o para mostrar o resultado final
    function showResult() {
      const quizContent = document.getElementById('quiz-content');
      if (!quizContent) return;
      
      const percentage = (score / quizData.length) * 100;
      let message, emoji, color;
      
      if (percentage === 100) {
        message = "PERFEITO! Voc√™ conhece nossa hist√≥ria melhor do que eu!";
        emoji = "üèÜ";
        color = "bg-yellow-500";
      } else if (percentage >= 80) {
        message = "Incr√≠vel! Voc√™ realmente prestou aten√ß√£o em cada detalhe!";
        emoji = "üåü";
        color = "bg-green-500";
      } else if (percentage >= 60) {
        message = "Muito bem! Voc√™ conhece bem nossa hist√≥ria!";
        emoji = "üíñ";
        color = "bg-blue-500";
      } else {
        message = "Que fofo! Vamos criar mais mem√≥rias juntos!";
        emoji = "üíï";
        color = "bg-pink-500";
      }
      
      quizContent.innerHTML = `
        <div class="text-center">
          <div class="text-5xl mb-4">${emoji}</div>
          <h2 class="text-2xl font-bold text-white mb-4">
            Resultado Final
          </h2>
          
          <div class="${color} rounded-full p-5 mb-5 inline-block">
            <div class="text-3xl font-bold text-white">
              ${score}/${quizData.length}
            </div>
            <div class="text-md text-white font-semibold">
              ${percentage.toFixed(0)}%
            </div>
          </div>
          
          <p class="text-lg mb-6">
            ${message}
          </p>
          
          <div class="flex flex-col gap-3">
            <a href="/" class="bg-gray-600 px-5 py-3 rounded-lg text-white text-center font-semibold no-underline">
              Voltar para o In√≠cio
            </a>
          </div>
        </div>
      `;
    }
    
    // Fun√ß√£o para mostrar a surpresa final
    function showFinalSurprise() {
      const quizContent = document.getElementById('quiz-content');
      if (!quizContent) return;
      
      quizContent.innerHTML = `
        <div class="text-center">
          <div class="text-5xl mb-4">üíç</div>
          <h2 class="text-2xl font-bold text-white mb-4">
            Para Ludmylla
          </h2>
          
          <div class="bg-purple-500 rounded-lg p-5 mb-5">
            <p class="mb-4">
              Este quiz foi apenas uma desculpa para lembrarmos de todos os momentos especiais que vivemos juntos.
            </p>
            <p class="font-semibold">
              Voc√™ √© a pessoa mais incr√≠vel que j√° conheci e eu te amo mais do que palavras podem expressar! ‚ù§Ô∏è
            </p>
          </div>
          
          <div class="flex flex-col gap-3">
            <button 
              onclick="restartQuiz()" 
              class="bg-purple-600 px-5 py-3 rounded-lg text-white font-semibold"
            >
              Fazer o Quiz Novamente
            </button>
            <a href="/" class="bg-gray-600 px-5 py-3 rounded-lg text-white text-center font-semibold no-underline">
              Voltar para o In√≠cio
            </a>
          </div>
        </div>
      `;
    }
    
    // Fun√ß√£o para reiniciar o quiz
    function restartQuiz() {
      currentQuestion = 0;
      score = 0;
      answered = false;
      loadQuestion();
    }
    
    // Inicializar quiz quando a p√°gina carregar
    document.addEventListener('DOMContentLoaded', loadQuestion);
  </script>
</body>
</html>