---
// src/components/Timeline.astro
interface TimelineEvent {
  title: string;
  date?: string;
  description: string;
  image?: string;
  caption?: string;
}

interface Props {
  events: TimelineEvent[];
}

const { events } = Astro.props as Props;
---

<div class="timeline-container py-20">
  <div class="max-w-6xl mx-auto px-6">
    <h2 class="text-5xl font-dancing font-bold text-center text-white mb-16 animate-fade-in">
      Nossa Linha do Tempo ðŸ’•
    </h2>
    
    <div class="relative">
      <!-- Timeline Line -->
      <div class="absolute left-1/2 transform -translate-x-1/2 w-1 h-full bg-gradient-to-b from-romantic-pink to-romantic-purple rounded-full"></div>
      
      {events.map((event, index) => (
        <div class={`timeline-item mb-16 ${index % 2 === 0 ? 'timeline-left' : 'timeline-right'}`}>
          <div class="timeline-content glass-effect rounded-2xl p-8 relative animate-slide-up" style={`animation-delay: ${index * 0.3}s`}>
            <!-- Timeline Dot -->
            <div class="timeline-dot absolute w-6 h-6 bg-gradient-to-r from-romantic-pink to-romantic-purple rounded-full border-4 border-white shadow-lg"></div>
            
            <div class="content">
              <h3 class="text-2xl font-bold text-white mb-2 font-dancing">{event.title}</h3>
              {event.date && (
                <p class="text-romantic-gold font-semibold mb-4 text-lg">ðŸ“… {event.date}</p>
              )}
              <p class="text-gray-200 text-lg leading-relaxed mb-6">{event.description}</p>
              
              {event.image && (
                <div class="polaroid-container">
                  <div class="polaroid">
                    <img 
                      src={event.image} 
                      alt={event.caption || event.title}
                      class="w-full h-48 object-cover rounded-lg"
                      loading="lazy"
                    />
                    {event.caption && (
                      <p class="polaroid-caption">{event.caption}</p>
                    )}
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</div>

<style>
  .timeline-container {
    background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%);
  }
  
  .timeline-item {
    position: relative;
    width: 50%;
  }
  
  .timeline-left {
    left: 0;
    padding-right: 3rem;
  }
  
  .timeline-right {
    left: 50%;
    padding-left: 3rem;
  }
  
  .timeline-left .timeline-content {
    text-align: right;
  }
  
  .timeline-right .timeline-content {
    text-align: left;
  }
  
  .timeline-left .timeline-dot {
    right: -3rem;
    top: 2rem;
    transform: translateX(50%);
  }
  
  .timeline-right .timeline-dot {
    left: -3rem;
    top: 2rem;
    transform: translateX(-50%);
  }
  
  .polaroid-container {
    display: flex;
    justify-content: center;
    margin-top: 1.5rem;
  }
  
  .polaroid {
    background: white;
    padding: 1rem 1rem 3rem 1rem;
    border-radius: 0.5rem;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
    transform: rotate(-2deg);
    transition: all 0.3s ease;
    max-width: 300px;
  }
  
  .polaroid:hover {
    transform: rotate(0deg) scale(1.05);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.4);
  }
  
  .polaroid-caption {
    color: #333;
    text-align: center;
    margin-top: 0.5rem;
    font-family: 'Dancing Script', cursive;
    font-size: 1.1rem;
    font-weight: 600;
  }
  
  /* Mobile Responsive */
  @media (max-width: 768px) {
    .timeline-item {
      width: 100%;
      left: 0 !important;
      padding-left: 3rem !important;
      padding-right: 1rem !important;
    }
    
    .timeline-content {
      text-align: left !important;
    }
    
    .timeline-dot {
      left: -3rem !important;
      right: auto !important;
      transform: translateX(-50%) !important;
    }
  }
</style>