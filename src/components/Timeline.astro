---
// src/components/Timeline.astro

// 1. Primeiro definimos a interface para os eventos da timeline
interface TimelineEvent {
  title: string;
  date?: string;
  description: string;
  image?: string;
  caption?: string;
}

// 2. Definimos as props do componente
interface Props {
  events: TimelineEvent[];
}

// 3. Tipamos explicitamente as props recebidas
const { events } = Astro.props as Props;
---

<div class="timeline">
  {events.map((event: TimelineEvent, index: number) => (
    <div class={`timeline-item ${index % 2 === 0 ? 'left' : 'right'}`}>
      <div class="content">
        <h3>{event.title}</h3>
        {event.date && <p class="date">{event.date}</p>}
        <p>{event.description}</p>
        {event.image && (
          <div class="polaroid">
            <img 
              src={event.image} 
              alt={event.caption || event.title} 
              width="200" 
              height="auto" 
              loading="lazy"
            />
            {event.caption && <p>{event.caption}</p>}
          </div>
        )}
      </div>
    </div>
  ))}
</div>

<style>
  .timeline {
    position: relative;
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 0;
  }

  .timeline::after {
    content: '';
    position: absolute;
    width: 6px;
    background-color: rgba(255, 255, 255, 0.3);
    top: 0;
    bottom: 0;
    left: 50%;
    margin-left: -3px;
    border-radius: 3px;
  }

  .timeline-item {
    padding: 10px 40px;
    position: relative;
    width: 50%;
    box-sizing: border-box;
  }

  .timeline-item::after {
    content: '';
    position: absolute;
    width: 25px;
    height: 25px;
    right: -12px;
    background-color: #ff6b6b;
    border: 4px solid #ffa3a3;
    top: 15px;
    border-radius: 50%;
    z-index: 1;
  }

  .left {
    left: 0;
    text-align: right;
  }

  .right {
    left: 50%;
    text-align: left;
  }

  .right::after {
    left: -12px;
  }

  .content {
    padding: 20px;
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 10px;
    margin-bottom: 20px;
  }

  .date {
    color: #ffa3a3;
    font-style: italic;
    margin: 0.5rem 0;
  }

  .polaroid {
    background: white;
    padding: 15px 15px 40px 15px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    transform: rotate(-5deg);
    margin: 20px auto;
    display: inline-block;
    color: black;
    transition: all 0.3s ease;
    max-width: 200px;
  }

  .polaroid:hover {
    transform: rotate(0deg) scale(1.05);
  }

  .polaroid img {
    width: 100%;
    height: auto;
    display: block;
  }

  .polaroid p {
    margin-top: 10px;
    text-align: center;
    font-size: 0.9rem;
  }
</style>